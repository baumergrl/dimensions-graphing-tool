'''
Higher Dimensional Visualization Tool created by Kristen Bean June 15, 2018

A tool that allows for data to be visualized as it changes in dimensions beyond 3D. "Frames" are constructed
that allow for the user to select up three dimensional vectors, a label and a viewing range.

'''

import csv
import matplotlib.pyplot as plt
import gc

from frame import Frame
from event import Event
from vector import Vector

vectors = []
events = []

##Write welcome to the program

def loadData():
    filename = input("Location of csv file to pull data from?\n")
    
    with open(filename, 'r') as rawdata:
        reader = csv.reader(rawdata, delimiter=',')
        for row in reader:
            tempRow = []
            for j in row:
                tempRow.append(int(j))
            vectors.append(tempRow)


def status():
    ##Check the status of vectors, frames and events
    print("Vectors found: ", len(vectors))
    counter = 1
    for i in vectors:
        print(counter, "\t", i[0:3])
        i+=1
    print(len(events), " events found.")
    for i in events:
        print(i)

def frameStatus():
    print(len(frames), " frames found.")
    counter = 1
    for i in frames:
        print(counter, "\t", frames[0:5])
        i+=1

def createFrame():
    print(self.vectors)
    yvec = input("Independent Vector?")
    

def interface():
        comm = input(">>>")
        if comm == "load data":
            loadData()
            interface()
        elif comm == "status":
            status()
            interface()
        elif comm == "help":
            appHelp()
            interface()
        elif comm == "create frame":
            newframe = createFrame()
            frames.append(newframe)
            interface()
        elif comm == "create event":
            newevent = createEvent()
            events.append(newevent)
            interface()
        elif comm == "delete event":
            deleteEvent()
            interface()
        elif comm == "delete frame":
            deleteFrame()
            interface()
        elif comm == "run event":
            runEvent()
            interface()
        elif comm == "plot frame":
            plotFrame()
            interface()
        elif comm == "quit":
            print("Quitting program... \n")
        else:
            print("Command not understood, type 'help' for documentation")
            interface()

interface()
